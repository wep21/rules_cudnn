package(default_visibility = ["//visibility:private"])

# cudnn_headers simply serve as a dummy target by adding
cc_library(
    name = "cudnn_headers",
    includes = ["cudnn/include"],
    srcs = glob(["cudnn/include/**/*.h"]),
)

cc_library(
    name = "cudnn",
    visibility = ["//visibility:public"],
    deps = [
        ":cudnn_headers",
    ] + select({
        "@platforms//os:linux": [":cudnn_so"],
        "@platforms//os:windows": [":cudnn_lib"],
        "//conditions:default": [],
    }),
)

cc_library(
    name = "cudnn_adv_infer",
    visibility = ["//visibility:public"],
    deps = [
        ":cudnn_headers",
    ] + select({
        "@platforms//os:linux": [":cudnn_adv_infer_so"],
        "@platforms//os:windows": [":cudnn_adv_infer_lib"],
        "//conditions:default": [],
    }),
)

cc_library(
    name = "cudnn_adv_train",
    visibility = ["//visibility:public"],
    deps = [
        ":cudnn_headers",
    ] + select({
        "@platforms//os:linux": [":cudnn_adv_train_so"],
        "@platforms//os:windows": [":cudnn_adv_train_lib"],
        "//conditions:default": [],
    }),
)

cc_library(
    name = "cudnn_cnn_infer",
    visibility = ["//visibility:public"],
    deps = [
        ":cudnn_headers",
    ] + select({
        "@platforms//os:linux": [":cudnn_cnn_infer_so"],
        "@platforms//os:windows": [":cudnn_cnn_infer_lib"],
        "//conditions:default": [],
    }),
)

cc_library(
    name = "cudnn_cnn_train",
    visibility = ["//visibility:public"],
    deps = [
        ":cudnn_headers",
    ] + select({
        "@platforms//os:linux": [":cudnn_cnn_train_so"],
        "@platforms//os:windows": [":cudnn_cnn_train_lib"],
        "//conditions:default": [],
    }),
)

cc_library(
    name = "cudnn_ops_infer",
    visibility = ["//visibility:public"],
    deps = [
        ":cudnn_headers",
    ] + select({
        "@platforms//os:linux": [":cudnn_ops_infer_so"],
        "@platforms//os:windows": [":cudnn_ops_infer_lib"],
        "//conditions:default": [],
    }),
)

cc_library(
    name = "cudnn_ops_train",
    visibility = ["//visibility:public"],
    deps = [
        ":cudnn_headers",
    ] + select({
        "@platforms//os:linux": [":cudnn_ops_train_so"],
        "@platforms//os:windows": [":cudnn_ops_train_lib"],
        "//conditions:default": [],
    }),
)

###
cc_import(
    name = "cudnn_lib",
    interface_library = "cudnn/lib/cudnn.lib",
    system_provided = 1,
    target_compatible_with = ["@platforms//os:windows"],
)

cc_import(
    name = "cudnn_so",
    shared_library = "cudnn/lib/libcudnn.so",
    target_compatible_with = ["@platforms//os:linux"],
)

cc_import(
    name = "cudnn_adv_infer_lib",
    interface_library = "cudnn/lib/cudnn_adv_infer.lib",
    system_provided = 1,
    target_compatible_with = ["@platforms//os:windows"],
)

cc_import(
    name = "libcudnn_adv_infer_so",
    shared_library = "cudnn/lib/libcudnn_adv_infer.so",
    target_compatible_with = ["@platforms//os:linux"],
)

cc_import(
    name = "cudnn_adv_train_lib",
    interface_library = "cudnn/lib/cudnn_adv_train.lib",
    system_provided = 1,
    target_compatible_with = ["@platforms//os:windows"],
)

cc_import(
    name = "libcudnn_adv_train_so",
    shared_library = "cudnn/lib/libcudnn_adv_train.so",
    target_compatible_with = ["@platforms//os:linux"],
)

cc_import(
    name = "cudnn_cnn_infer_lib",
    interface_library = "cudnn/lib/cudnn_cnn_infer.lib",
    system_provided = 1,
    target_compatible_with = ["@platforms//os:windows"],
)

cc_import(
    name = "libcudnn_cnn_infer_so",
    shared_library = "cudnn/lib/libcudnn_cnn_infer.so",
    target_compatible_with = ["@platforms//os:linux"],
)

cc_import(
    name = "cudnn_cnn_train_lib",
    interface_library = "cudnn/lib/cudnn_cnn_train.lib",
    system_provided = 1,
    target_compatible_with = ["@platforms//os:windows"],
)

cc_import(
    name = "libcudnn_cnn_train_so",
    shared_library = "cudnn/lib/libcudnn_cnn_train.so",
    target_compatible_with = ["@platforms//os:linux"],
)

cc_import(
    name = "cudnn_ops_infer_lib",
    interface_library = "cudnn/lib/cudnn_ops_infer.lib",
    system_provided = 1,
    target_compatible_with = ["@platforms//os:windows"],
)

cc_import(
    name = "libcudnn_ops_infer_so",
    shared_library = "cudnn/lib/libcudnn_ops_infer.so",
    target_compatible_with = ["@platforms//os:linux"],
)

cc_import(
    name = "cudnn_ops_train_lib",
    interface_library = "cudnn/lib/cudnn_ops_train.lib",
    system_provided = 1,
    target_compatible_with = ["@platforms//os:windows"],
)

cc_import(
    name = "libcudnn_ops_train_so",
    shared_library = "cudnn/lib/libcudnn_ops_train.so",
    target_compatible_with = ["@platforms//os:linux"],
)
